{"version":3,"sources":["utils/API.js","components/Container/index.js","components/WordRow/index.js","pages/Homepage.js","pages/Outcome.js","pages/NoMatch.js","App.js","index.js"],"names":["apiCounter","console","log","counterNum","axios","get","Container","fluid","children","className","uuid","require","WordRow","props","sent","sentArray","score","sentenceCompleted","calcScore","Object","values","letterArray","join","split","window","sentenceFinished","length","counter","validatingId","counterFunc","validIdFunc","handleKeyDown","key","letterCol","document","getElementById","letterSpan","firstElementChild","undefined","classList","remove","add","textContent","toLowerCase","handleKeyUp","useEffect","addEventListener","removeEventListener","map","word","index","letter","id","onKeyDown","Homepage","useState","setUnscrambledSentence","sentenceArray","setSentenceArray","scrambledSentence","setScrambledSentence","loadGame","scrambleSentence","unscrambledSentence","sentenceArr","newSentence","push","letterArr","firstLetter","lastLetter","pop","shift","i","j","Math","floor","random","temp","scrambledInside","scrambleWord","API","then","res","unscrambledSentence1","data","sentence","catch","err","handleEnter","apiCount","history","useHistory","type","onClick","event","preventDefault","Outcome","NoMatch","role","aria-label","App","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a77c2080.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n    getSentence: function(apiCounter) {\r\n        console.log('apiCounter in api' + apiCounter);\r\n        const counterNum = apiCounter;\r\n      return axios.get(`https://api.hatchways.io/assessment/sentences/${counterNum}`);\r\n    }\r\n    \r\n  };\r\n","import React from \"react\";\r\n\r\n// Exporting the Container\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nfunction Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"} page-container`}>{children}</div>\r\n  \r\n};\r\n\r\nexport default Container;\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nconst { uuid } = require('uuidv4');\r\n\r\nfunction WordRow(props) {\r\n\tconst { sent, score, sentenceCompleted, calcScore } = props;\r\n\r\n\t//retrieves the array of sentence words\r\n\tconst sentArray = Object.values(sent);\r\n\r\n\t//creates an array of letters fromo the words in the sentence array\r\n\tconst letterArray = sentArray.join(\" \").split(\"\");\r\n\r\n\t//calculates the length of the letter array to determine when scrambled sentence is solved\r\n\twindow.sentenceFinished = letterArray.length;\r\n\r\n\t//counter is used to assign an id to each letter in the sentence\r\n\tvar counter = 0;\r\n\r\n\t//validating id is used to compare key event with letter id\r\n\twindow.validatingId = 1;\r\n\r\n\t//increments the counter for the key of each letter in the sentence\r\n\tconst counterFunc = () => {\r\n\t\tcounter++;\r\n\t\treturn counter;\r\n\t};\r\n\r\n\t//increments the validatingId\r\n\tconst validIdFunc = () => {\r\n\t\twindow.validatingId++;\r\n\t\treturn window.validatingId;\r\n\t};\r\n\r\n\t//reset counter upon new sentence load\r\n\tconst resetCounter = () => {\r\n\t\treturn (counter = 0);\r\n\t};\r\n\r\n\t//reset validating id upon new sentence load\r\n\tconst resetValidatingId = () => {\r\n\t\treturn (window.validatingId = 1);\r\n\t};\r\n\r\n\t//evaluates keydown event to compare to letters in puzzle in order\r\n\tconst handleKeyDown = ({ key }) => {\r\n\t\tvar letterCol = document.getElementById(`${window.validatingId}`);\r\n\t\tvar letterSpan = letterCol.firstElementChild;\r\n\r\n\t\t//if letterSpan is \"null\" or the space, it is evaluated here\r\n\t\tif (letterSpan === null || letterSpan === undefined) {\r\n\t\t\tif (key === \" \") {\r\n\t\t\t\tletterCol.classList.remove(\"spaceNotGuessed\");\r\n\t\t\t\tletterCol.classList.add(\"spaceGuessed\");\r\n\t\t\t\tvalidIdFunc();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"please press the space key\");\r\n\t\t\t}\r\n\t\t\t//if letterSpan is a letter, it is evaluated here\r\n\t\t} else {\r\n\t\t\tvar letterId = letterSpan.textContent.toLowerCase();\r\n\r\n\t\t\tif (letterId === key) {\r\n\t\t\t\tletterCol.classList.remove(\"notGuessedSpace\");\r\n\t\t\t\tletterCol.classList.add(\"guessedSpace\");\r\n\t\t\t\tletterSpan.classList.remove(\"notGuessed\");\r\n\t\t\t\tletterSpan.classList.add(\"guessed\");\r\n\t\t\t\tif (window.validatingId === window.sentenceFinished) {\r\n\t\t\t\t\tconsole.log('sentence finished');\r\n\t\t\t\t\tresetCounter();\r\n\t\t\t\t\tresetValidatingId();\r\n\t\t\t\t\tvalidIdFunc();\r\n\t\t\t\t\tprops.sentenceCompleted();\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.validatingId++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleKeyUp = () => {};\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener(\"keydown\", handleKeyDown);\r\n\t\twindow.addEventListener(\"keyup\", handleKeyUp);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"keydown\", handleKeyDown);\r\n\t\t\twindow.removeEventListener(\"keyup\", handleKeyUp);\r\n\t\t};\r\n\t}, []);\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{sentArray.map((word, index) => (\r\n\t\t\t\t<div className=\"row\" key={uuid()}>\r\n\t\t\t\t\t{word.split(\"\").map((letter) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid={counterFunc()}\r\n\t\t\t\t\t\t\tkey={letter.id}\r\n\t\t\t\t\t\t\tclassName={`col letterSpace notGuessedSpace`}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className={\"notGuessed\"}>{letter}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t{index < sentArray.length - 1 ? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tid={counterFunc()}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\t\t\tkey={\"space\" + index}\r\n\t\t\t\t\t\t\tclassName={`col space spaceNotGuessed`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span className={\"notGuessed\"}></span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WordRow;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport \"../../src/App.css\";\r\nimport Container from \"../components/Container\";\r\nimport WordRow from \"../components/WordRow/\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst { uuid } = require('uuidv4');\r\n\r\nwindow.apiCounter = 1;\r\nwindow.score = 0;\r\n\r\nconst Homepage = () => {\r\n\t//React hooks to render state\r\n\tconst [unscrambledSentence, setUnscrambledSentence] = useState(\"\");\r\n\tconst [sentenceArray, setSentenceArray] = useState([]);\r\n\tconst [scrambledSentence, setScrambledSentence] = useState(\"\");\r\n\r\n\t//initiates loadGame function\r\n\tuseEffect(() => {\r\n\t\tloadGame();\r\n\t}, []);\r\n\r\n\t//takes in words to scramble, maintains first and last letter, returns inside of the word scrambled\r\n\tconst scrambleWord = (word) => {\r\n\t\tvar length = word.length;\r\n\t\tvar letterArr = word.split(\"\");\r\n\t\tvar firstLetter = letterArr[0];\r\n\t\tvar lastLetter = letterArr[length - 1];\r\n\r\n\t\tletterArr.pop();\r\n\t\tletterArr.shift();\r\n\r\n\t\tconst scrambledInside = (letterArr) => {\r\n\t\t\tfor (var i = 0; i < length - 2; i++) {\r\n\t\t\t\tvar j = Math.floor(Math.random() * length);\r\n\t\t\t\tvar temp = letterArr[i];\r\n\t\t\t\tletterArr[i] = letterArr[j];\r\n\t\t\t\tletterArr[j] = temp;\r\n\t\t\t}\r\n\t\t\treturn letterArr.join(\"\");\r\n\t\t};\r\n\t\treturn `${firstLetter}` + `${scrambledInside(letterArr)}` + `${lastLetter}`;\r\n\t};\r\n\r\n\t//splits the sentence into word array, maintains words with 2- letters, sends other words to scrambled\r\n\tconst scrambleSentence = (unscrambledSentence) => {\r\n\t\tconst sentenceArr = unscrambledSentence.split(\" \");\r\n\t\tsetSentenceArray(sentenceArr);\r\n\t\tconst newSentence = [];\r\n\t\tsentenceArr.map((word) => {\r\n\t\t\tif (word.length > 2) {\r\n\t\t\t\tnewSentence.push(scrambleWord(word));\r\n\t\t\t} else {\r\n\t\t\t\tnewSentence.push(word);\r\n\t\t\t}\r\n\t\t});\r\n\t\tsetScrambledSentence(newSentence.join(\" \"));\r\n\t};\r\n\r\n\t//pull sentence from API, sets unscrambled sentence for the WordRow component, and calls scrambleSentence function\r\n\tconst loadGame = () => {\r\n\t\tAPI.getSentence(window.apiCounter)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst unscrambledSentence1 = res.data.data.sentence;\r\n\t\t\t\tsetUnscrambledSentence(unscrambledSentence1);\r\n\t\t\t\tscrambleSentence(unscrambledSentence1);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\r\n\tconst handleEnter = ({ key }) => {\r\n\t\twindow.removeEventListener(\"keydown\", handleEnter);\r\n\t\tconsole.log(key);\r\n\t\tif (key === 'Enter') {\r\n\t\t\tconsole.log('yes');\r\n\t\t\tapiCount();\r\n\t\tloadGame();\r\n\t\t}\r\n\t}\r\n\t//uses React history component to redirect to /outcome\r\n\tlet history = useHistory();\r\n\r\n\t//when score hits 10, user is redirected to /outcome\r\n\tconst calcScore = () => {\r\n\t\tconsole.log('in calcscore function');\r\n\t\tif (window.score >= 9) {\r\n\t\t\thistory.push(\"/outcome\");\r\n\t\t} else {\r\n\t\t\twindow.score++;\r\n\t\t\twindow.addEventListener(\"keydown\", handleEnter);\r\n\t\t}\r\n\t};\r\n\r\n\t//keeps track of api counter\r\n\tconst apiCount = () => {\r\n\t\twindow.apiCounter++;\r\n\t};\r\n\r\n\t//when user completes a sentence, calcscore function is run\r\n\tconst sentenceCompleted = () => {\r\n\t\tconsole.log('in sentence completed function');\r\n\t\tcalcScore();\r\n\t\r\n\t};\r\n\r\n\t//increases api count to pull next sentence and calls loadgame function for new sentence\r\n\tconst nextSentence = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tapiCount();\r\n\t\tloadGame();\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<div className=\"row justify-content-center\" id=\"contentRow\">\r\n\t\t\t\t\t<div className=\"col-12 col-md-8\" id=\"contentBox\">\r\n\t\t\t\t\t\t<div className=\"row text-center\" id=\"sentence-text\">\r\n\t\t\t\t\t\t\t<h1>{scrambledSentence}</h1>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"row text-center\" id=\"directions-text\">\r\n\t\t\t\t\t\t\t<p>Guess the sentence! Start typing</p>\r\n\r\n\t\t\t\t\t\t\t<p>The yellow blocks are meant for spaces</p>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<h2 className=\"row text-center\" id=\"score\">\r\n\t\t\t\t\t\t\t<p>Score: {window.score}</p>\r\n\t\t\t\t\t\t</h2>\r\n\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"row text-center justify-content-center\"\r\n\t\t\t\t\t\t\tid=\"directions-text\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<WordRow\r\n\t\t\t\t\t\t\t\tsent={sentenceArray}\r\n\t\t\t\t\t\t\t\tscore={window.score}\r\n\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\tsentenceCompleted={sentenceCompleted}\r\n\t\t\t\t\t\t\t\tcalcScore={calcScore}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row d-flex justify-content-center\">\r\n\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success btn-sm justify-content-center\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"nextButton\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={nextSentence}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\n\r\n//renders outcome screen upon winning game\r\nfunction Outcome() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-12 col-md-8 d-flex justify-content-center align-items-center\" id=\"contentBox\">You win!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Outcome;\r\n","import React from \"react\";\r\nimport Container from \"../components/Container\";\r\n\r\n//render no match page if incorrect url entered\r\nconst NoMatch = () => {\r\n  return (\r\n    <Container fluid>\r\n\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t<div className=\"col-12 col-md-8 d-flex justify-content-center align-items-center\" id=\"contentBox\">\r\n          <div className=\"jumbotron\">\r\n            <h1>404 Page Not Found</h1>\r\n            <h1 className=\"text-center\">\r\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n                🙄\r\n              </span>\r\n            </h1>\r\n          </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n   \r\n  );\r\n};\r\n\r\nexport default NoMatch;","import \"./App.css\";\nimport React from \"react\";\nimport Homepage from \"./pages/Homepage\";\nimport Outcome from \"./pages/Outcome\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NoMatch from \"./pages/NoMatch\";\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath={[\"/\", \"/hatchways_word_scrambler\"]}\n\t\t\t\t\t\tcomponent={Homepage}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Route exact path=\"/outcome\" component={Outcome} />\n\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t\n\t\t<App />\n\t,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}